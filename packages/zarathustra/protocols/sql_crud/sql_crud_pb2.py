# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: sql_crud.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database

# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(
    b'\n\x0esql_crud.proto\x12\x1f\x61\x65\x61.zarathustra.sql_crud.v0_1_0\"\x89\x12\n\x0eSqlCrudMessage\x12U\n\x06\x64\x65lete\x18\x05 \x01(\x0b\x32\x43.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Delete_PerformativeH\x00\x12S\n\x05\x65rror\x18\x06 \x01(\x0b\x32\x42.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Error_PerformativeH\x00\x12U\n\x06inject\x18\x07 \x01(\x0b\x32\x43.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Inject_PerformativeH\x00\x12U\n\x06insert\x18\x08 \x01(\x0b\x32\x43.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Insert_PerformativeH\x00\x12U\n\x06result\x18\t \x01(\x0b\x32\x43.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Result_PerformativeH\x00\x12U\n\x06select\x18\n \x01(\x0b\x32\x43.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Select_PerformativeH\x00\x12U\n\x06update\x18\x0b \x01(\x0b\x32\x43.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Update_PerformativeH\x00\x1a\xae\x01\n\tErrorCode\x12[\n\nerror_code\x18\x01 \x01(\x0e\x32G.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.ErrorCode.ErrorCodeEnum\"D\n\rErrorCodeEnum\x12\x19\n\x15INVALID_SQL_STATEMENT\x10\x00\x12\x18\n\x14INVALID_PERFORMATIVE\x10\x01\x1a\xd6\x02\n\x0eLabeledRecords\x12V\n\x07\x63olumns\x18\x01 \x03(\x0b\x32\x45.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.LabeledRecords.Column\x1a~\n\x05Value\x12\x14\n\nbool_value\x18\x01 \x01(\x08H\x00\x12\x13\n\tint_value\x18\x02 \x01(\x03H\x00\x12\x15\n\x0b\x66loat_value\x18\x03 \x01(\tH\x00\x12\x13\n\tstr_value\x18\x04 \x01(\tH\x00\x12\x15\n\x0b\x62ytes_value\x18\x05 \x01(\x0cH\x00\x42\x07\n\x05value\x1al\n\x06\x43olumn\x12\x0c\n\x04name\x18\x01 \x01(\t\x12T\n\x06values\x18\x02 \x03(\x0b\x32\x44.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.LabeledRecords.Value\x1a\x87\x02\n\x0cUpdateValues\x12\x62\n\x0fkey_value_pairs\x18\x01 \x03(\x0b\x32I.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.UpdateValues.KeyValuePair\x1a\x92\x01\n\x0cKeyValuePair\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\x13\n\tstr_value\x18\x02 \x01(\tH\x00\x12\x14\n\nbool_value\x18\x03 \x01(\x08H\x00\x12\x13\n\tint_value\x18\x04 \x01(\x05H\x00\x12\x15\n\x0b\x66loat_value\x18\x05 \x01(\tH\x00\x12\x15\n\x0b\x62ytes_value\x18\x06 \x01(\x0cH\x00\x42\x07\n\x05value\x1a\x82\x01\n\x13Insert_Performative\x12\x12\n\ntable_name\x18\x01 \x01(\t\x12W\n\x0flabeled_records\x18\x02 \x01(\x0b\x32>.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.LabeledRecords\x1ag\n\x13Select_Performative\x12\x12\n\ntable_name\x18\x01 \x01(\t\x12\x0f\n\x07\x63olumns\x18\x02 \x03(\t\x12\x11\n\tcondition\x18\x03 \x01(\t\x12\x18\n\x10\x63ondition_is_set\x18\x04 \x01(\x08\x1a\xab\x01\n\x13Update_Performative\x12\x12\n\ntable_name\x18\x01 \x01(\t\x12S\n\rupdate_values\x18\x02 \x01(\x0b\x32<.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.UpdateValues\x12\x11\n\tcondition\x18\x03 \x01(\t\x12\x18\n\x10\x63ondition_is_set\x18\x04 \x01(\x08\x1aV\n\x13\x44\x65lete_Performative\x12\x12\n\ntable_name\x18\x01 \x01(\t\x12\x11\n\tcondition\x18\x02 \x01(\t\x12\x18\n\x10\x63ondition_is_set\x18\x03 \x01(\x08\x1a(\n\x13Inject_Performative\x12\x11\n\tstatement\x18\x01 \x01(\t\x1a\xdd\x01\n\x13Result_Performative\x12\x17\n\x0fresult_type_int\x18\x01 \x01(\x05\x12\x1e\n\x16result_type_int_is_set\x18\x02 \x01(\x08\x12\x62\n\x1aresult_type_LabeledRecords\x18\x03 \x01(\x0b\x32>.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.LabeledRecords\x12)\n!result_type_LabeledRecords_is_set\x18\x04 \x01(\x08\x1av\n\x12\x45rror_Performative\x12M\n\nerror_code\x18\x01 \x01(\x0b\x32\x39.aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.ErrorCode\x12\x11\n\terror_msg\x18\x02 \x01(\tB\x0e\n\x0cperformativeb\x06proto3'
)


_SQLCRUDMESSAGE = DESCRIPTOR.message_types_by_name['SqlCrudMessage']
_SQLCRUDMESSAGE_ERRORCODE = _SQLCRUDMESSAGE.nested_types_by_name['ErrorCode']
_SQLCRUDMESSAGE_LABELEDRECORDS = _SQLCRUDMESSAGE.nested_types_by_name['LabeledRecords']
_SQLCRUDMESSAGE_LABELEDRECORDS_VALUE = _SQLCRUDMESSAGE_LABELEDRECORDS.nested_types_by_name['Value']
_SQLCRUDMESSAGE_LABELEDRECORDS_COLUMN = _SQLCRUDMESSAGE_LABELEDRECORDS.nested_types_by_name['Column']
_SQLCRUDMESSAGE_UPDATEVALUES = _SQLCRUDMESSAGE.nested_types_by_name['UpdateValues']
_SQLCRUDMESSAGE_UPDATEVALUES_KEYVALUEPAIR = _SQLCRUDMESSAGE_UPDATEVALUES.nested_types_by_name['KeyValuePair']
_SQLCRUDMESSAGE_INSERT_PERFORMATIVE = _SQLCRUDMESSAGE.nested_types_by_name['Insert_Performative']
_SQLCRUDMESSAGE_SELECT_PERFORMATIVE = _SQLCRUDMESSAGE.nested_types_by_name['Select_Performative']
_SQLCRUDMESSAGE_UPDATE_PERFORMATIVE = _SQLCRUDMESSAGE.nested_types_by_name['Update_Performative']
_SQLCRUDMESSAGE_DELETE_PERFORMATIVE = _SQLCRUDMESSAGE.nested_types_by_name['Delete_Performative']
_SQLCRUDMESSAGE_INJECT_PERFORMATIVE = _SQLCRUDMESSAGE.nested_types_by_name['Inject_Performative']
_SQLCRUDMESSAGE_RESULT_PERFORMATIVE = _SQLCRUDMESSAGE.nested_types_by_name['Result_Performative']
_SQLCRUDMESSAGE_ERROR_PERFORMATIVE = _SQLCRUDMESSAGE.nested_types_by_name['Error_Performative']
_SQLCRUDMESSAGE_ERRORCODE_ERRORCODEENUM = _SQLCRUDMESSAGE_ERRORCODE.enum_types_by_name['ErrorCodeEnum']
SqlCrudMessage = _reflection.GeneratedProtocolMessageType(
    'SqlCrudMessage',
    (_message.Message,),
    {
        'ErrorCode': _reflection.GeneratedProtocolMessageType(
            'ErrorCode',
            (_message.Message,),
            {
                'DESCRIPTOR': _SQLCRUDMESSAGE_ERRORCODE,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.ErrorCode)
            },
        ),
        'LabeledRecords': _reflection.GeneratedProtocolMessageType(
            'LabeledRecords',
            (_message.Message,),
            {
                'Value': _reflection.GeneratedProtocolMessageType(
                    'Value',
                    (_message.Message,),
                    {
                        'DESCRIPTOR': _SQLCRUDMESSAGE_LABELEDRECORDS_VALUE,
                        '__module__': 'sql_crud_pb2'
                        # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.LabeledRecords.Value)
                    },
                ),
                'Column': _reflection.GeneratedProtocolMessageType(
                    'Column',
                    (_message.Message,),
                    {
                        'DESCRIPTOR': _SQLCRUDMESSAGE_LABELEDRECORDS_COLUMN,
                        '__module__': 'sql_crud_pb2'
                        # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.LabeledRecords.Column)
                    },
                ),
                'DESCRIPTOR': _SQLCRUDMESSAGE_LABELEDRECORDS,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.LabeledRecords)
            },
        ),
        'UpdateValues': _reflection.GeneratedProtocolMessageType(
            'UpdateValues',
            (_message.Message,),
            {
                'KeyValuePair': _reflection.GeneratedProtocolMessageType(
                    'KeyValuePair',
                    (_message.Message,),
                    {
                        'DESCRIPTOR': _SQLCRUDMESSAGE_UPDATEVALUES_KEYVALUEPAIR,
                        '__module__': 'sql_crud_pb2'
                        # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.UpdateValues.KeyValuePair)
                    },
                ),
                'DESCRIPTOR': _SQLCRUDMESSAGE_UPDATEVALUES,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.UpdateValues)
            },
        ),
        'Insert_Performative': _reflection.GeneratedProtocolMessageType(
            'Insert_Performative',
            (_message.Message,),
            {
                'DESCRIPTOR': _SQLCRUDMESSAGE_INSERT_PERFORMATIVE,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Insert_Performative)
            },
        ),
        'Select_Performative': _reflection.GeneratedProtocolMessageType(
            'Select_Performative',
            (_message.Message,),
            {
                'DESCRIPTOR': _SQLCRUDMESSAGE_SELECT_PERFORMATIVE,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Select_Performative)
            },
        ),
        'Update_Performative': _reflection.GeneratedProtocolMessageType(
            'Update_Performative',
            (_message.Message,),
            {
                'DESCRIPTOR': _SQLCRUDMESSAGE_UPDATE_PERFORMATIVE,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Update_Performative)
            },
        ),
        'Delete_Performative': _reflection.GeneratedProtocolMessageType(
            'Delete_Performative',
            (_message.Message,),
            {
                'DESCRIPTOR': _SQLCRUDMESSAGE_DELETE_PERFORMATIVE,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Delete_Performative)
            },
        ),
        'Inject_Performative': _reflection.GeneratedProtocolMessageType(
            'Inject_Performative',
            (_message.Message,),
            {
                'DESCRIPTOR': _SQLCRUDMESSAGE_INJECT_PERFORMATIVE,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Inject_Performative)
            },
        ),
        'Result_Performative': _reflection.GeneratedProtocolMessageType(
            'Result_Performative',
            (_message.Message,),
            {
                'DESCRIPTOR': _SQLCRUDMESSAGE_RESULT_PERFORMATIVE,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Result_Performative)
            },
        ),
        'Error_Performative': _reflection.GeneratedProtocolMessageType(
            'Error_Performative',
            (_message.Message,),
            {
                'DESCRIPTOR': _SQLCRUDMESSAGE_ERROR_PERFORMATIVE,
                '__module__': 'sql_crud_pb2'
                # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage.Error_Performative)
            },
        ),
        'DESCRIPTOR': _SQLCRUDMESSAGE,
        '__module__': 'sql_crud_pb2'
        # @@protoc_insertion_point(class_scope:aea.zarathustra.sql_crud.v0_1_0.SqlCrudMessage)
    },
)
_sym_db.RegisterMessage(SqlCrudMessage)
_sym_db.RegisterMessage(SqlCrudMessage.ErrorCode)
_sym_db.RegisterMessage(SqlCrudMessage.LabeledRecords)
_sym_db.RegisterMessage(SqlCrudMessage.LabeledRecords.Value)
_sym_db.RegisterMessage(SqlCrudMessage.LabeledRecords.Column)
_sym_db.RegisterMessage(SqlCrudMessage.UpdateValues)
_sym_db.RegisterMessage(SqlCrudMessage.UpdateValues.KeyValuePair)
_sym_db.RegisterMessage(SqlCrudMessage.Insert_Performative)
_sym_db.RegisterMessage(SqlCrudMessage.Select_Performative)
_sym_db.RegisterMessage(SqlCrudMessage.Update_Performative)
_sym_db.RegisterMessage(SqlCrudMessage.Delete_Performative)
_sym_db.RegisterMessage(SqlCrudMessage.Inject_Performative)
_sym_db.RegisterMessage(SqlCrudMessage.Result_Performative)
_sym_db.RegisterMessage(SqlCrudMessage.Error_Performative)

if _descriptor._USE_C_DESCRIPTORS == False:

    DESCRIPTOR._options = None
    _SQLCRUDMESSAGE._serialized_start = 52
    _SQLCRUDMESSAGE._serialized_end = 2365
    _SQLCRUDMESSAGE_ERRORCODE._serialized_start = 678
    _SQLCRUDMESSAGE_ERRORCODE._serialized_end = 852
    _SQLCRUDMESSAGE_ERRORCODE_ERRORCODEENUM._serialized_start = 784
    _SQLCRUDMESSAGE_ERRORCODE_ERRORCODEENUM._serialized_end = 852
    _SQLCRUDMESSAGE_LABELEDRECORDS._serialized_start = 855
    _SQLCRUDMESSAGE_LABELEDRECORDS._serialized_end = 1197
    _SQLCRUDMESSAGE_LABELEDRECORDS_VALUE._serialized_start = 961
    _SQLCRUDMESSAGE_LABELEDRECORDS_VALUE._serialized_end = 1087
    _SQLCRUDMESSAGE_LABELEDRECORDS_COLUMN._serialized_start = 1089
    _SQLCRUDMESSAGE_LABELEDRECORDS_COLUMN._serialized_end = 1197
    _SQLCRUDMESSAGE_UPDATEVALUES._serialized_start = 1200
    _SQLCRUDMESSAGE_UPDATEVALUES._serialized_end = 1463
    _SQLCRUDMESSAGE_UPDATEVALUES_KEYVALUEPAIR._serialized_start = 1317
    _SQLCRUDMESSAGE_UPDATEVALUES_KEYVALUEPAIR._serialized_end = 1463
    _SQLCRUDMESSAGE_INSERT_PERFORMATIVE._serialized_start = 1466
    _SQLCRUDMESSAGE_INSERT_PERFORMATIVE._serialized_end = 1596
    _SQLCRUDMESSAGE_SELECT_PERFORMATIVE._serialized_start = 1598
    _SQLCRUDMESSAGE_SELECT_PERFORMATIVE._serialized_end = 1701
    _SQLCRUDMESSAGE_UPDATE_PERFORMATIVE._serialized_start = 1704
    _SQLCRUDMESSAGE_UPDATE_PERFORMATIVE._serialized_end = 1875
    _SQLCRUDMESSAGE_DELETE_PERFORMATIVE._serialized_start = 1877
    _SQLCRUDMESSAGE_DELETE_PERFORMATIVE._serialized_end = 1963
    _SQLCRUDMESSAGE_INJECT_PERFORMATIVE._serialized_start = 1965
    _SQLCRUDMESSAGE_INJECT_PERFORMATIVE._serialized_end = 2005
    _SQLCRUDMESSAGE_RESULT_PERFORMATIVE._serialized_start = 2008
    _SQLCRUDMESSAGE_RESULT_PERFORMATIVE._serialized_end = 2229
    _SQLCRUDMESSAGE_ERROR_PERFORMATIVE._serialized_start = 2231
    _SQLCRUDMESSAGE_ERROR_PERFORMATIVE._serialized_end = 2349
# @@protoc_insertion_point(module_scope)
